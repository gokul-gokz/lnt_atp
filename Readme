Steps to execute the code:

1. Create a catkin workspace.
2. Copy all the packages into src folder of the workspace.
3. Then enter 'catkin_make' command.
4. Check whether making of the packages are 100% completed.
5. Then enter the command 'roslaunch lnt_moveit_config demo.launch'.
6. An RViz window will open with lnt manipulator.
7. Then enter the command 'rosrun lnt_atp lnt_atp1' in another terminal.
8. Then open the RViz window and click 'Add' in the Displays tab. A dialog Box will open.
9. Select Marker array and press ok.
10. Select the marker array column in displays tab and choose the topic as /rviz_visual_tools
11. Then open another terminal.
12. Enter the command 'rosrun lnt_packet lnt_publisher'. This will execute the cpp file where packet data is hardcoded.
13 Another way to send packet data ,open a terminal and enter 
   rostopic pub /lnt_packet_data lnt_packet/lnt_packet "packet_code: 5
   values: [0, 40.0, 0.0, 0.0, 0.0, 0.0]
   eff_mode: 0" 

Test1: Individual position control mode
Example:
rostopic pub /lnt_packet_data lnt_packet/lnt_packet "packet_code: 5
   values: [0, 40.0, 0.0, 0.0, 0.0, 0.0]
   eff_mode: 0" 


Test2: Multiple joint control mode
Example:
rostopic pub /lnt_packet_data lnt_packet/lnt_packet "packet_code: 6
   values: [60, -40.0, 90.0, 40.0, 25.0, 65.0]
   eff_mode: 0" 



Test3: Unconstrained cartesian control mode
Example:
rostopic pub /lnt_packet_data lnt_packet/lnt_packet "packet_code: 1
   values: [0.2, 0.1, 0.1, 0.15, 0.22, 0.17]
   eff_mode: 0" 




Test4: Orientation constraint cartesian space
Example:
rostopic pub /lnt_packet_data lnt_packet/lnt_packet "packet_code: 1
   values: [0.01, -0.1, 0.2, 0.0 0.0, 0.0]
   eff_mode: 1" 



Test5: Position constraint cartesian space
Example:
rostopic pub /lnt_packet_data lnt_packet/lnt_packet "packet_code: 1
   values: [0, 0, 0, 0.15, 0.12, 0.0]
   eff_mode: 2" 



Test6: Cylindrical space control
Example:
rostopic pub /lnt_packet_data lnt_packet/lnt_packet "packet_code: 2
   values: [0.1, 0.2, 0.3, 0.0, 0.0, 0.0]
   eff_mode: 0" 

Note1:These values can also be set in the executuble file'lnt_publisher' and executed. The packets will be published continuously for every 100msec and the motion will be continuous. To stop publishing the packets, the node should be terminated(ctrl+c).

Note2: The arm should be set to some start pose using RVIZ terminal first and then the corresponding packets should be published because at the home position the link1 of arm is resting on a mechanical lock.*(For tests 3-6)

Note3: The camera is facing down in this current URDF which will be fixed in the new URDF(after the gripper design change and base link change). So there might be small inconsistency during execution because of that.





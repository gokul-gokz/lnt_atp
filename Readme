Steps to execute the code:

1. Create a catkin workspace.
2. Copy all the packages into src folder of the workspace.
3. Install the dependencies by running the following commands in the terminal:

  sudo apt-get install ros-kinetic-urdfdom-py
  sudo apt-get install ros-kinetic-moveit-msgs
  sudo apt-get install ros-kinetic-ompl
  sudo apt-get install ros-kinetic-warehouse-ros
  sudo apt-get install ros-kinetic-controller-manager-msgs
  sudo apt-get install ros-kinetic-rviz-visual-tools
  sudo apt-get install ros-kinetic-trac-ik-kinematics-plugin


4. Then enter 'catkin_make' command.
5. Check whether making of the packages are 100% completed.
6. Then enter the command 'roslaunch lnt_moveit_config demo.launch'.
7. An RViz window will open with lnt manipulator.
8. Then enter the command 'rosrun lnt_atp lnt_atp1' in another terminal. The manipulator will move to the predefined start position [ 0  45   -65  0  -20  0].
9. Then open the RViz window and click 'Add' in the Displays tab. A dialog Box will open.
10. Select Marker array and press ok.
11. Select the marker array column in displays tab and choose the topic as /rviz_visual_tools.
12. Then again press 'Add' in the Displays tab. In the upcoming dialog box, choose 'Axes' and press ok. 
13. Then open another terminal.
14. Enter the command 'rosrun lnt_packet lnt_publisher'. This will execute the cpp file where packet data is hardcoded. But whenever you change some value in the cpp file,you need to run the 'catkin_make' command in the workspace directory.
15. Another way to send packet data ,open a terminal and enter 
   rostopic pub /lnt_packet_data lnt_packet/lnt_packet "packet_code: 5
   values: [0, 40.0, 0.0, 0.0, 0.0, 0.0]
   eff_mode: 0" 

Test1: Individual position control mode
Example:
rostopic pub /lnt_packet_data lnt_packet/lnt_packet "packet_code: 5
   values: [2, 40.0, 0.0, 0.0, 0.0, 0.0]
   eff_mode: 0" 

Note: Joint number[0-5] should be specified as first element and the angle should be specified as second element and the remaining elements in the array should be left as zero.


Test2: Multiple joint control mode
Example:
rostopic pub /lnt_packet_data lnt_packet/lnt_packet "packet_code: 6
   values: [60, -40.0, 90.0, 40.0, 25.0, 65.0]
   eff_mode: 0" 



Test3: Unconstrained cartesian control mode
Example:
rostopic pub /lnt_packet_data lnt_packet/lnt_packet "packet_code: 1
   values: [0.2, 0.1, 0.1, 0.15, 0.22, 0.17]
   eff_mode: 0" 




Test4: Orientation constraint cartesian space
Example:
rostopic pub /lnt_packet_data lnt_packet/lnt_packet "packet_code: 1
   values: [0.01, -0.1, 0.2, 0.0 0.0, 0.0]
   eff_mode: 1" 



Test5: Position constraint cartesian space
Example:
rostopic pub /lnt_packet_data lnt_packet/lnt_packet "packet_code: 1
   values: [0, 0, 0, 0.15, 0.12, 0.0]
   eff_mode: 2" 



Test6: Cylindrical space control
Example:
rostopic pub /lnt_packet_data lnt_packet/lnt_packet "packet_code: 2
   values: [0.1, 0.2, 0.3, 0.0, 0.0, 0.0]
   eff_mode: 0" 

Note1:These values can also be set in the executuble file'lnt_publisher' and executed. The packets will be published continuously for every 100msec and the motion will be continuous. To stop publishing the packets, the node should be terminated(ctrl+c).






